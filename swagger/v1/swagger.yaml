---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  api/v1/users:
    get:
      summary: Retrieves users
      tags:
      - Users
      responses:
        '200':
          description: OK
  "/api/v1/auth/login":
    post:
      summary: Log in
      tags:
      - Log in
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  exp:
                    type: string
                  email:
                    type: string
        '401':
          description: Unauthorized
  api/v1/users/{id}:
    get:
      summary: Retrieves a user
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  bio:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  photo:
                    type: string
                  post_counter:
                    type: integer
                  email:
                    type: string
                  role:
                    type: string
        '404':
          description: Not found
  api/v1/users/{id}/posts:
    get:
      summary: Retrieves posts of users(id)
      tags:
      - Posts
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  text:
                    type: string
                  comments_counter:
                    type: integer
                  likes_counter:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  author_id:
                    type: integer
        '404':
          description: Not found
  api/v1/users/{user_id}/posts/{id}:
    get:
      summary: Retrieves a post
      tags:
      - Posts
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  text:
                    type: string
                  comments_counter:
                    type: integer
                  likes_counter:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  author_id:
                    type: integer
        '404':
          description: Not found
  api/v1/users/{user_id}/posts/{post_id}/comments:
    get:
      summary: Retrieve comments
      tags:
      - Posts
      - Users
      - Comments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  text:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  author_id:
                    type: integer
                  post_id:
                    type: integer
        '404':
          description: Not found
  api/v1/users/{user_id}/posts/{post_id}/comments/{id}:
    get:
      summary: Retrieves a comment
      tags:
      - Posts
      - Users
      - Comments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  text:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  author_id:
                    type: integer
                  post_id:
                    type: integer
        '404':
          description: Not found
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
